/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  ValidateNested,
  IsBoolean,
} from "class-validator";
import { DatarequestCreateNestedManyWithoutUsersInput } from "./DatarequestCreateNestedManyWithoutUsersInput";
import { Type } from "class-transformer";
import { DatasuggestionCreateNestedManyWithoutUsersInput } from "./DatasuggestionCreateNestedManyWithoutUsersInput";
import { GroupCreateNestedManyWithoutUsersInput } from "./GroupCreateNestedManyWithoutUsersInput";
import { EnumblockuserWhereUniqueInput } from "../../enumblockuser/base/EnumblockuserWhereUniqueInput";
import { LinksharingCreateNestedManyWithoutUsersInput } from "./LinksharingCreateNestedManyWithoutUsersInput";
import { MembergroupCreateNestedManyWithoutUsersInput } from "./MembergroupCreateNestedManyWithoutUsersInput";
import { MyidentityCreateNestedManyWithoutUsersInput } from "./MyidentityCreateNestedManyWithoutUsersInput";
import { ProfileCreateNestedManyWithoutUsersInput } from "./ProfileCreateNestedManyWithoutUsersInput";
import { ProfileviewCreateNestedManyWithoutUsersInput } from "./ProfileviewCreateNestedManyWithoutUsersInput";
@InputType()
class UserCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  apartment?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  city?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  country?: string | null;

  @ApiProperty({
    required: false,
    type: () => DatarequestCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => DatarequestCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => DatarequestCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  datarequestsaskid?: DatarequestCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => DatarequestCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => DatarequestCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => DatarequestCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  datarequestsreceiveid?: DatarequestCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => DatasuggestionCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => DatasuggestionCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => DatasuggestionCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  datasuggestionsreceiveid?: DatasuggestionCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => DatasuggestionCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => DatasuggestionCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => DatasuggestionCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  datasuggestionssuggestionid?: DatasuggestionCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: () => GroupCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => GroupCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => GroupCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  groupsownerid?: GroupCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  housnumber?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  image?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isactive?: boolean | null;

  @ApiProperty({
    required: false,
    type: () => EnumblockuserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EnumblockuserWhereUniqueInput)
  @IsOptional()
  @Field(() => EnumblockuserWhereUniqueInput, {
    nullable: true,
  })
  isblocked?: EnumblockuserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isregistered?: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: () => LinksharingCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => LinksharingCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => LinksharingCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  linksharings?: LinksharingCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => MembergroupCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => MembergroupCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => MembergroupCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  membergroups?: MembergroupCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => MyidentityCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => MyidentityCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => MyidentityCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  myidentitiesidentityid?: MyidentityCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => MyidentityCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => MyidentityCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => MyidentityCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  myidentitiesmyidentitycontactid?: MyidentityCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  password!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string | null;

  @ApiProperty({
    required: false,
    type: () => ProfileCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ProfileCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ProfileCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  profiles?: ProfileCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => ProfileviewCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ProfileviewCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ProfileviewCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  profileviewsidentityid?: ProfileviewCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => ProfileviewCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ProfileviewCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ProfileviewCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  profileviewswatchid?: ProfileviewCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: true,
    type: [String],
  })
  @IsString({
    each: true,
  })
  @Field(() => [String])
  roles!: Array<string>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  street?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  username!: string;
}
export { UserCreateInput };

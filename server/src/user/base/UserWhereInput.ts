/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { DatarequestListRelationFilter } from "../../datarequest/base/DatarequestListRelationFilter";
import { DatasuggestionListRelationFilter } from "../../datasuggestion/base/DatasuggestionListRelationFilter";
import { GroupListRelationFilter } from "../../group/base/GroupListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { EnumblockuserWhereUniqueInput } from "../../enumblockuser/base/EnumblockuserWhereUniqueInput";
import { LinksharingListRelationFilter } from "../../linksharing/base/LinksharingListRelationFilter";
import { MembergroupListRelationFilter } from "../../membergroup/base/MembergroupListRelationFilter";
import { MyidentityListRelationFilter } from "../../myidentity/base/MyidentityListRelationFilter";
import { ProfileListRelationFilter } from "../../profile/base/ProfileListRelationFilter";
import { ProfileviewListRelationFilter } from "../../profileview/base/ProfileviewListRelationFilter";
@InputType()
class UserWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  apartment?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  city?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  country?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => DatarequestListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DatarequestListRelationFilter)
  @IsOptional()
  @Field(() => DatarequestListRelationFilter, {
    nullable: true,
  })
  datarequestsaskid?: DatarequestListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => DatarequestListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DatarequestListRelationFilter)
  @IsOptional()
  @Field(() => DatarequestListRelationFilter, {
    nullable: true,
  })
  datarequestsreceiveid?: DatarequestListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => DatasuggestionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DatasuggestionListRelationFilter)
  @IsOptional()
  @Field(() => DatasuggestionListRelationFilter, {
    nullable: true,
  })
  datasuggestionsreceiveid?: DatasuggestionListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => DatasuggestionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DatasuggestionListRelationFilter)
  @IsOptional()
  @Field(() => DatasuggestionListRelationFilter, {
    nullable: true,
  })
  datasuggestionssuggestionid?: DatasuggestionListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => GroupListRelationFilter,
  })
  @ValidateNested()
  @Type(() => GroupListRelationFilter)
  @IsOptional()
  @Field(() => GroupListRelationFilter, {
    nullable: true,
  })
  groupsownerid?: GroupListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  housnumber?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  image?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isactive?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: () => EnumblockuserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EnumblockuserWhereUniqueInput)
  @IsOptional()
  @Field(() => EnumblockuserWhereUniqueInput, {
    nullable: true,
  })
  isblocked?: EnumblockuserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isregistered?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => LinksharingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => LinksharingListRelationFilter)
  @IsOptional()
  @Field(() => LinksharingListRelationFilter, {
    nullable: true,
  })
  linksharings?: LinksharingListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => MembergroupListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MembergroupListRelationFilter)
  @IsOptional()
  @Field(() => MembergroupListRelationFilter, {
    nullable: true,
  })
  membergroups?: MembergroupListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => MyidentityListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MyidentityListRelationFilter)
  @IsOptional()
  @Field(() => MyidentityListRelationFilter, {
    nullable: true,
  })
  myidentitiesidentityid?: MyidentityListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => MyidentityListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MyidentityListRelationFilter)
  @IsOptional()
  @Field(() => MyidentityListRelationFilter, {
    nullable: true,
  })
  myidentitiesmyidentitycontactid?: MyidentityListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  phone?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ProfileListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProfileListRelationFilter)
  @IsOptional()
  @Field(() => ProfileListRelationFilter, {
    nullable: true,
  })
  profiles?: ProfileListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ProfileviewListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProfileviewListRelationFilter)
  @IsOptional()
  @Field(() => ProfileviewListRelationFilter, {
    nullable: true,
  })
  profileviewsidentityid?: ProfileviewListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ProfileviewListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProfileviewListRelationFilter)
  @IsOptional()
  @Field(() => ProfileviewListRelationFilter, {
    nullable: true,
  })
  profileviewswatchid?: ProfileviewListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  street?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  username?: StringFilter;
}
export { UserWhereInput };
